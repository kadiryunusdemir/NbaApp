from flask_wtf import FlaskForm
from wtforms import StringField, SelectField, PasswordField
from wtforms.validators import DataRequired, NumberRange, Length, Optional
from wtforms_components import IntegerField,DecimalField
from datetime import datetime

class LoginForm(FlaskForm):
    username = StringField("Username", validators=[DataRequired()])
    password = PasswordField("Password", validators=[DataRequired()])
    
class TeamEditForm(FlaskForm):
    full_name = StringField("full_name", validators=[DataRequired()])
    abbreviation = StringField("abbreviation", validators=[DataRequired(), Length(3, 3)])
    nickname = StringField("nickname", validators=[DataRequired()])
    city = StringField("city", validators=[DataRequired()])
    state = StringField("state", validators=[DataRequired()])
    year_founded = IntegerField("year_founded",validators=[DataRequired(), NumberRange(min=1946, max=datetime.now().year)])

class TeamAttributesEditForm(FlaskForm):
    abbreviation = StringField("abbreviation")
    teams = SelectField('teams', coerce=int)
    team_id = IntegerField("team_id",validators=[Optional(), NumberRange(min=1610612737)])
    arena = StringField("arena",validators=[DataRequired()])
    arena_capacity = IntegerField("arena_capacity",validators=[Optional(), NumberRange(min=0)])
    owner = StringField("owner", validators=[DataRequired()])
    general_manager = StringField("general_manager", validators=[DataRequired()])
    head_coach = StringField("head_coach", validators=[DataRequired()])
    d_league_affiliation = StringField("d_league_affiliation", validators=[DataRequired()])
    facebook_website_link = StringField("facebook_website_link", validators=[Optional()])
    instagram_website_link = StringField("instagram_website_link", validators=[Optional()])
    twitter_website_link = StringField("twitter_website_link", validators=[Optional()])
    
class PlayerEditForm(FlaskForm):
    full_name = StringField("full_name", validators=[DataRequired()])
    first_name = StringField("first_name", validators=[DataRequired()])
    last_name = StringField("last_name", validators=[DataRequired()])
    is_active = SelectField('is_active', coerce=int)
    
    
class PlayerAttributesEditForm(FlaskForm):
    first_name = StringField("first_name", validators=[DataRequired()])
    last_name = StringField("last_name", validators=[DataRequired()])
    display_fi_last = StringField("fi_last", validators=[Optional()])
    player_slug = StringField("player_slug", validators=[Optional()])
    birthdate = StringField("birthdate", validators=[Optional()])
    country = StringField("country", validators=[Optional()])
    last_affiliation = StringField("last_affilation", validators=[Optional()])
    height = StringField("height", validators=[Optional()])
    weight = StringField("weight", validators=[Optional()])
    season_exp = StringField("season_exp", validators=[Optional()])
    jersey = StringField("jersey", validators=[Optional()])
    position = StringField("position", validators=[Optional()])
    rosterStatus = StringField("rosterStatus", validators=[Optional()])
    games_played_current_season_flag = StringField("games_played_current_season_flag", validators=[Optional()])
    teams = SelectField('teams', coerce=int)
    team_name = StringField("team_name", validators=[Optional()])
    playerCode = StringField("playerCode", validators=[Optional()])
    from_year = StringField("from_year", validators=[Optional()])
    to_year = StringField("to_year", validators=[Optional()])
    dleague_flag = StringField("dleague_flag", validators=[Optional()])
    nba_flag = StringField("nba_flag", validators=[Optional()])
    games_played_flag = StringField("games_played_flag", validators=[Optional()])
    draft_year = StringField("draft_year", validators=[Optional()])
    draft_round = StringField("draft_round", validators=[Optional()])
    draft_number = StringField("draft_number", validators=[Optional()])
    pts = StringField("pts", validators=[Optional()])
    ast = StringField("ast", validators=[Optional()])
    reb = StringField("reb", validators=[Optional()])
    all_star_appearances = StringField("all_star_appearances", validators=[Optional()])
    pie = StringField("pie", validators=[Optional()])
    
class PlayerAttributesAddForm(FlaskForm):
    players = SelectField('player', coerce=int, validators=[DataRequired()])
    first_name = StringField("first_name", validators=[DataRequired()])
    last_name = StringField("last_name", validators=[DataRequired()])
    display_fi_last = StringField("fi_last", validators=[Optional()])
    player_slug = StringField("player_slug", validators=[Optional()])
    birthdate = StringField("birthdate", validators=[Optional()])
    country = StringField("country", validators=[Optional()])
    last_affiliation = StringField("last_affilation", validators=[Optional()])
    height = StringField("height", validators=[Optional()])
    weight = StringField("weight", validators=[Optional()])
    season_exp = StringField("season_exp", validators=[Optional()])
    jersey = StringField("jersey", validators=[Optional()])
    position = StringField("position", validators=[Optional()])
    rosterStatus = StringField("rosterStatus", validators=[Optional()])
    games_played_current_season_flag = StringField("games_played_current_season_flag", validators=[Optional()])
    teams = SelectField('teams', coerce=int)
    team_name = StringField("team_name", validators=[Optional()])
    playerCode = StringField("playerCode", validators=[Optional()])
    from_year = StringField("from_year", validators=[Optional()])
    to_year = StringField("to_year", validators=[Optional()])
    dleague_flag = StringField("dleague_flag", validators=[Optional()])
    nba_flag = StringField("nba_flag", validators=[Optional()])
    games_played_flag = StringField("games_played_flag", validators=[Optional()])
    draft_year = StringField("draft_year", validators=[Optional()])
    draft_round = StringField("draft_round", validators=[Optional()])
    draft_number = StringField("draft_number", validators=[Optional()])
    pts = StringField("pts", validators=[Optional()])
    ast = StringField("ast", validators=[Optional()])
    reb = StringField("reb", validators=[Optional()])
    all_star_appearances = StringField("all_star_appearances", validators=[Optional()])
    pie = StringField("pie", validators=[Optional()])
class DraftAddForm(FlaskForm):
    yearDraft = IntegerField("yearDraft", validators=[DataRequired(),NumberRange(min=1946,max=2023)])
    numberPickOverAll = IntegerField("numberPickOverAll", validators=[DataRequired()])
    numberRound = IntegerField("numberRound", validators=[DataRequired()])
    numberRoundPick = IntegerField("numberRoundPick", validators=[DataRequired()])
    nameOrganizationFrom = StringField("nameOrganizationFrom", validators=[DataRequired()])
    typeOrganizationFrom = StringField("typeOrganizationFrom", validators=[DataRequired()])
    idPlayer = IntegerField("idPlayer", validators=[DataRequired()])
    team_id = IntegerField("team_id", validators=[DataRequired()])
    Player_Profile_Flag = IntegerField("Player_Profile_Flag", validators=[DataRequired()])
    slugOrganizationTypeFrom = StringField("slugOrganizationTypeFrom", validators=[DataRequired()])
    locationOrganizationFrom = StringField("locationOrganizationFrom", validators=[Optional()])
class DraftEditForm(FlaskForm):
    yearDraft = IntegerField("yearDraft", validators=[Optional(),NumberRange(min=1946,max=2023)])
    numberPickOverAll = IntegerField("numberPickOverAll", validators=[Optional()])
    numberRound = IntegerField("numberRound", validators=[Optional()])
    numberRoundPick = IntegerField("numberRoundPick", validators=[Optional()])
    nameOrganizationFrom = StringField("nameOrganizationFrom", validators=[Optional()])
    typeOrganizationFrom = StringField("typeOrganizationFrom", validators=[Optional()])
    idPlayer = IntegerField("idPlayer", validators=[Optional()])
    team_id = IntegerField("team_id", validators=[Optional()])
    Player_Profile_Flag = IntegerField("Player_Profile_Flag", validators=[Optional()])
    slugOrganizationTypeFrom = StringField("slugOrganizationTypeFrom", validators=[Optional()])
    locationOrganizationFrom = StringField("locationOrganizationFrom", validators=[Optional()])
    
class DraftCombineAddForm(FlaskForm):
    yearCombine = IntegerField("yearCombine", validators=[DataRequired(),NumberRange(min=1946,max=2023)])
    idPlayer = IntegerField("idPlayer", validators=[DataRequired()])
    slugPosition = StringField("slugPosition", validators=[DataRequired()])
    heightWOShoesInches = DecimalField("heightWOShoesInches", validators=[DataRequired()])
    heightWOShoes = StringField("heightWOShoes", validators=[DataRequired()])
    weightLBS = DecimalField("weightLBS", validators=[DataRequired()])
    wingspanInches = DecimalField("wingspanInches", validators=[DataRequired()])
    wingspan = StringField("wingspan", validators=[DataRequired()])
    reachStandingInches = DecimalField("reachStandingInches", validators=[DataRequired()])
    reachStandingO = StringField("reachStandingO", validators=[DataRequired()])
    verticalLeapStandingInches = DecimalField("verticalLeapStandingInches", validators=[Optional()])
    verticalLeapMaxInches = StringField("verticalLeapMaxInches", validators=[Optional()])
    timeLaneAgility = DecimalField("timeLaneAgility", validators=[Optional()])
    timeThreeQuarterCourtSprint = DecimalField("timeThreeQuarterCourtSprint", validators=[Optional()])
    repsBenchPress135 = DecimalField("repsBenchPress135", validators=[Optional()])
    
class DraftCombineEditForm(FlaskForm):
    yearCombine = IntegerField("yearCombine", validators=[Optional(),NumberRange(min=1946,max=2023)])
    idPlayer = IntegerField("idPlayer", validators=[Optional()])
    slugPosition = StringField("slugPosition", validators=[Optional()])
    heightWOShoesInches = DecimalField("heightWOShoesInches", validators=[Optional()])
    heightWOShoes = StringField("heightWOShoes", validators=[Optional()])
    weightLBS = DecimalField("weightLBS", validators=[Optional()])
    wingspanInches = DecimalField("wingspanInches", validators=[Optional()])
    wingspan = StringField("wingspan", validators=[Optional()])
    reachStandingInches = DecimalField("reachStandingInches", validators=[Optional()])
    reachStandingO = StringField("reachStandingO", validators=[Optional()])
    verticalLeapStandingInches = DecimalField("verticalLeapStandingInches", validators=[Optional()])
    verticalLeapMaxInches = StringField("verticalLeapMaxInches", validators=[Optional()])
    timeLaneAgility = DecimalField("timeLaneAgility", validators=[Optional()])
    timeThreeQuarterCourtSprint = DecimalField("timeThreeQuarterCourtSprint", validators=[Optional()])
    repsBenchPress135 = DecimalField("repsBenchPress135", validators=[Optional()])

class GameAddForm(FlaskForm):
    teamIDHome = IntegerField("teamIDHome", validators= [DataRequired()])
    teamNameHome = StringField("teamNameHome", validators = [DataRequired()])
    gameDate = StringField("gameDate", validators = [DataRequired()])
    WLHome = SelectField("WLHome", coerce=str, choices = [("W"),("L")], validators=[Optional()])
    pointsHome = IntegerField("pointsHome", validators = [Optional()])
    teamIDAway = IntegerField("teamIDAway", validators = [DataRequired()])
    teamNameAway = StringField("teamNameAway", validators = [DataRequired()])
    WLAway = SelectField("WLAway", coerce=str, choices = [("W"),("L")], validators=[Optional()])
    pointsAway = IntegerField("pointsAway", validators = [Optional()])

class GameEditForm(FlaskForm):
    teamIDHome = IntegerField("teamIDHome", validators=[Optional()])
    teamNameHome = StringField("teamNameHome", validators=[Optional()])
    gameDate = StringField("gameDate", validators=[Optional()])
    WLHome = SelectField("WLHome", coerce=str, choices = [("W"),("L")], validators=[Optional()])
    pointsHome = IntegerField("pointsHome", validators=[Optional()])
    teamIDAway = IntegerField("teamIDAway", validators=[Optional()])
    teamNameAway = StringField("teamNameAway", validators=[Optional()])
    WLAway = SelectField("WLAway", coerce=str, choices = [("W"),("L")], validators=[Optional()])
    pointsAway = IntegerField("pointsAway", validators=[Optional()])
